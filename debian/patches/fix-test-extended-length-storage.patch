Description: Fix failing test when AUFS is in use
 AUFS only supports filenames up to 242 characters and a test
 was wrongly assuming that a 255 characters filename would be possible.
Bug: https://code.djangoproject.com/ticket/24826
Author: Claude Paroz <claude@2xlibre.net> with changes by RaphaÃ«l Hertzog <hertzog@debian.org>

--- a/django/core/files/storage.py
+++ b/django/core/files/storage.py
@@ -13,7 +13,7 @@ from django.utils.crypto import get_rand
 from django.utils.deconstruct import deconstructible
 from django.utils.deprecation import RemovedInDjango20Warning
 from django.utils.encoding import filepath_to_uri, force_text
-from django.utils.functional import LazyObject
+from django.utils.functional import LazyObject, cached_property
 from django.utils.module_loading import import_string
 from django.utils.six.moves.urllib.parse import urljoin
 from django.utils.text import get_valid_filename
@@ -27,6 +27,8 @@ class Storage(object):
     storage systems can inherit or override, as necessary.
     """
 
+    MAX_FILENAME_LENGTH = 255  # Should be safe on most backends
+
     # The following methods represent a public interface to private methods.
     # These shouldn't be overridden by subclasses unless absolutely necessary.
 
@@ -198,6 +200,16 @@ class FileSystemStorage(Storage):
             else settings.FILE_UPLOAD_DIRECTORY_PERMISSIONS
         )
 
+    @cached_property
+    def MAX_FILENAME_LENGTH(self):
+        dir_to_test = self.location
+        while not os.path.exists(dir_to_test):
+            dir_to_test = os.path.dirname(dir_to_test)
+        try:
+            return os.pathconf(dir_to_test, 'PC_NAME_MAX')
+        except Exception:
+            return Storage.MAX_FILENAME_LENGTH
+
     def _open(self, name, mode='rb'):
         return File(open(self.path(name), mode))
 
--- a/tests/file_storage/tests.py
+++ b/tests/file_storage/tests.py
@@ -534,7 +534,7 @@ class FileFieldStorageTests(SimpleTestCa
     def test_extended_length_storage(self):
         # Testing FileField with max_length > 255. Most systems have filename
         # length limitation of 255. Path takes extra chars.
-        filename = 251 * 'a'  # 4 chars for extension.
+        filename = (temp_storage.MAX_FILENAME_LENGTH - 4) * 'a'  # 4 chars for extension.
         obj = Storage()
         obj.extended_length.save('%s.txt' % filename, ContentFile('Same Content'))
         self.assertEqual(obj.extended_length.name, 'tests/%s.txt' % filename)
