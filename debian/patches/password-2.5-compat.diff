Last-updated: 2013-09-14
Origin: https://github.com/django/django/commit/6903d1690a92aa040adfb0c8eb37cf62e4206714
Author: Russell Keith-Magee
Description: Removed usage of b"" string syntax for Python 2.5 compatibility.

--- a/django/contrib/auth/tests/hashers.py
+++ b/django/contrib/auth/tests/hashers.py
@@ -33,7 +33,7 @@
         self.assertRaises(
             ValueError,
             make_password,
-            b"1" * (MAXIMUM_PASSWORD_LENGTH + 1),
+            "1" * (MAXIMUM_PASSWORD_LENGTH + 1),
         )
 
     def test_pkbdf2(self):
@@ -47,7 +47,7 @@
         self.assertRaises(
             ValueError,
             make_password,
-            b"1" * (MAXIMUM_PASSWORD_LENGTH + 1),
+            "1" * (MAXIMUM_PASSWORD_LENGTH + 1),
             "seasalt",
             "pbkdf2_sha256",
         )
@@ -63,7 +63,7 @@
         self.assertRaises(
             ValueError,
             make_password,
-            b"1" * (MAXIMUM_PASSWORD_LENGTH + 1),
+            "1" * (MAXIMUM_PASSWORD_LENGTH + 1),
             "seasalt",
             "sha1",
         )
@@ -79,7 +79,7 @@
         self.assertRaises(
             ValueError,
             make_password,
-            b"1" * (MAXIMUM_PASSWORD_LENGTH + 1),
+            "1" * (MAXIMUM_PASSWORD_LENGTH + 1),
             "seasalt",
             "md5",
         )
@@ -99,7 +99,7 @@
         self.assertRaises(
             ValueError,
             make_password,
-            b"1" * (MAXIMUM_PASSWORD_LENGTH + 1),
+            "1" * (MAXIMUM_PASSWORD_LENGTH + 1),
             "",
             "unsalted_md5",
         )
@@ -115,7 +115,7 @@
         self.assertRaises(
             ValueError,
             make_password,
-            b"1" * (MAXIMUM_PASSWORD_LENGTH + 1),
+            "1" * (MAXIMUM_PASSWORD_LENGTH + 1),
             "seasalt",
             "crypt",
         )
@@ -131,7 +131,7 @@
         self.assertRaises(
             ValueError,
             make_password,
-            b"1" * (MAXIMUM_PASSWORD_LENGTH + 1),
+            "1" * (MAXIMUM_PASSWORD_LENGTH + 1),
             hasher="bcrypt",
         )
 
@@ -154,8 +154,8 @@
         def encode(s, password, salt):
             return True
 
-        self.assertTrue(encode(None, b"1234", b"1234"))
-        self.assertRaises(ValueError, encode, None, b"1234567890A", b"1234")
+        self.assertTrue(encode(None, "1234", "1234"))
+        self.assertRaises(ValueError, encode, None, "1234567890A", "1234")
 
     def test_low_level_pkbdf2(self):
         hasher = PBKDF2PasswordHasher()
